name: MLOps Pipeline

on:
  workflow_dispatch:
  push:
    branches:    
      - dev

env:
  PYTHON_VERSION: 3.6
  RESOURCE_GROUP: mlops-demo
  REGION: westeurope
  AZUREML_WORKSPACE_NAME: mlops-mlwrksp
  AZUREML_COMPUTE_CLUSTER_NAME: cpu-cluster
  AZUREML_COMPUTE_VMSIZE: STANDARD_DS2_V2
  AZUREML_COMPUTE_MIN_NODES: 0
  AZUREML_COMPUTE_MAX_NODES: 2
  AZUREML_COMPUTE_IDLE_SECONDS_BEFORE_SCALEDOWN: 300

jobs:
  dataquality:
    runs-on: ubuntu-latest
    name: Run Data Quality Checks
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    - name: Install Python Requirements
      run: ./install_requirements.sh
      working-directory: setup
    - name: Data Quality Check
      run: pytest tests/unit/data_test.py --doctest-modules --junitxml=junit/test-results.xml --cov=data_test --cov-report=xml --cov-report=html
    - name: Publish Data Quality Check
      uses: EnricoMi/publish-unit-test-result-action@v1.6
      if: always()
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        files: junit/**/*.xml
        check_name: Data Quality Check Results
  train:
    runs-on: ubuntu-latest
    needs: dataquality
    name: Train, Evaluate & Register Model
    container: 
      image: mcr.microsoft.com/azure-cli:latest
      volumes:
      - /github/workspace:/root
    env:
      AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
    steps:
    - name: Create Metadata and Models Folder
      run: mkdir -p metadata && mkdir -p models
    - name: Azure Login
      run: |
        echo "$AZURE_CREDENTIALS" \
          | jq -r '.tenantId' 
    - name: Add Azure ML CLI Extension
      run: |
        az config set extension.use_dynamic_install=yes_without_prompt
        az extension add -n azure-cli-ml
    - name: Create Azure ML Service Workspace
      run: |
        az ml workspace create -g "$RESOURCE_GROUP" -w "$AZUREML_WORKSPACE_NAME" \
          -l "$REGION" --exist-ok --yes
    - name: Create Azure ML Compute
      run: |
        az ml computetarget create amlcompute -g "$RESOURCE_GROUP" -w "$AZUREML_WORKSPACE_NAME" \
          -n "$AZUREML_COMPUTE_CLUSTER_NAME" -s "$AZUREML_COMPUTE_VMSIZE" \
          --min-nodes "$AZUREML_COMPUTE_MIN_NODES" --max-nodes "$AZUREML_COMPUTE_MAX_NODES" \
          --idle-seconds-before-scaledown "$AZUREML_COMPUTE_IDLE_SECONDS_BEFORE_SCALEDOWN"
    - name: Upload Data to the Default Datastore
      run: |
        az ml datastore upload -g "$RESOURCE_GROUP" -w "$AZUREML_WORKSPACE_NAME" \
          -n $(az ml datastore show-default -g "$RESOURCE_GROUP" -w "$AZUREML_WORKSPACE_NAME" --query name -o tsv) \
          -p data -u diabetes --overwrite true
